name: 🚀 Build & Release Gestion Financière Little

permissions:
  contents: write
  actions: read

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build et Release multi-plateforme
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: 🧰 Checkout du code
        uses: actions/checkout@v4

      - name: 🐍 Installer Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📦 Installer les dépendances
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: 📥 Installer Tesseract OCR
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            # Télécharger et installer Tesseract pour Windows
            choco install tesseract -y
            # Créer le dossier tesseract local
            mkdir -p tesseract
            # Copier Tesseract depuis l'installation système
            cp -r "C:/Program Files/Tesseract-OCR/"* tesseract/ || true
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update
            sudo apt-get install -y tesseract-ocr tesseract-ocr-fra
            mkdir -p tesseract
            cp /usr/bin/tesseract tesseract/ || true
            cp -r /usr/share/tesseract-ocr tesseract/tessdata || true
          else
            brew install tesseract
            mkdir -p tesseract
            cp /usr/local/bin/tesseract tesseract/ || true
            cp -r /usr/local/share/tessdata tesseract/ || true
          fi
        shell: bash

      - name: 🏗️ Compiler l'application (optimisé antivirus)
        run: |
          # Créer un fichier .spec optimisé
          cat > gestiolittle.spec << 'EOF'
          # -*- mode: python ; coding: utf-8 -*-
          import os
          import glob
          
          block_cipher = None
          
          # Collecter tous les fichiers .py SAUF lancer_gestiolittle.py
          py_files = [f for f in glob.glob('*.py') if f != 'lancer_gestiolittle.py']
          datas_list = [(f, '.') for f in py_files]
          
          # Ajouter le dossier tesseract s'il existe
          if os.path.exists('tesseract'):
              datas_list.append(('tesseract', 'tesseract'))
          
          a = Analysis(
              ['lancer_gestiolittle.py'],
              pathex=[],
              binaries=[],
              datas=datas_list,
              hiddenimports=['streamlit'],
              hookspath=[],
              hooksconfig={},
              runtime_hooks=[],
              excludes=['pytest', 'unittest', 'test', '_pytest', 'setuptools', 'pip', 'wheel'],
              win_no_prefer_redirects=False,
              win_private_assemblies=False,
              cipher=block_cipher,
              noarchive=False,
          )
          
          pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)
          
          exe = EXE(
              pyz,
              a.scripts,
              a.binaries,
              a.zipfiles,
              a.datas,
              [],
              name='GestionFinanciereLittle',
              debug=False,
              bootloader_ignore_signals=False,
              strip=False,
              upx=False,
              console=True,
              disable_windowed_traceback=False,
              argv_emulation=False,
              target_arch=None,
              codesign_identity=None,
              entitlements_file=None,
          )
          EOF
          
          # Compiler avec le .spec optimisé
          pyinstaller gestiolittle.spec --clean --noconfirm
          
          # Copier gestiolittle.py et tesseract à côté de l'exécutable
          cp gestiolittle.py dist/
          if [ -d "tesseract" ]; then
            cp -r tesseract dist/
          fi
        shell: bash

      # 📦 Créer un package complet avec l'exe et les fichiers nécessaires
      - name: 📦 Créer le package de distribution
        run: |
          cd dist
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            7z a -tzip GestionFinanciereLittle-Windows.zip GestionFinanciereLittle.exe gestiolittle.py tesseract/
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            zip -r GestionFinanciereLittle-Linux.zip GestionFinanciereLittle gestiolittle.py tesseract/
          else
            zip -r GestionFinanciereLittle-macOS.zip GestionFinanciereLittle gestiolittle.py tesseract/
          fi
          cd ..
        shell: bash

      # 📤 Création de la release GitHub
      - name: 📤 Upload de l'exécutable pour la Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: "Gestion Financière Little v${{ github.run_number }}"
          body: |
            🚀 Nouvelle version générée automatiquement.

            ✅ Compatible Windows, Linux et macOS.
            🔏 L'exécutable Windows est signé numériquement.
            
            📦 **Installation** : Extraire le ZIP et lancer l'exécutable.
            ⚠️ Les 2 fichiers doivent rester ensemble dans le même dossier !
          files: |
            dist/GestionFinanciereLittle*.zip
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
